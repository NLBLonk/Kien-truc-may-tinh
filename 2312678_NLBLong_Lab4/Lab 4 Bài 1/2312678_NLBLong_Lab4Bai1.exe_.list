EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
2312678_NLBLong_Lab4Bai1.exe_ -- emu8086 assembler version: 4.08  
 
[ 9/11/2024  --  2:34:14 PM ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       .model small
[   2]        :                                       .stack 100h
[   3]        :                                       .data
[   4]    0100: 0A 0D 48 61 79 20 6E 68 61 70 20 63   TBao DB 10,13,'Hay nhap chuoi ky tu (ket thuc bang Enter): $'
                68 75 6F 69 20 6B 79 20 74 75 20 28 
                6B 65 74 20 74 68 75 63 20 62 61 6E 
                67 20 45 6E 74 65 72 29 3A 20 24    
[   5]    012F: 0A 0D 43 68 75 6F 69 20 6E 67 75 6F   KQ DB 10,13,'Chuoi nguoc:                                $'
                63 3A 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 24    
[   6]    015E: 0A 0D 42 61 6D 20 70 68 69 6D 20 62   KThuc DB 10,13, 'Bam phim bat ky de thoat chuong trinh $'
                61 74 20 6B 79 20 64 65 20 74 68 6F 
                61 74 20 63 68 75 6F 6E 67 20 74 72 
                69 6E 68 20 24                      
[   7]        :                                       .code
[   8]    0190: B8 10 00                              mov ax,@data
[   9]    0193: 8E D8                                 mov ds,ax
[  10]        :                                       
[  11]    0195: B4 09                                 mov ah,9
[  12]    0197: BA 00 00                              lea dx,TBao
[  13]    019A: CD 21                                 int 21h
[  14]        :                                       
[  15]    019C: 33 C9                                 xor cx,cx
[  16]    019E:                                       input:
[  17]    019E: B4 01                                 mov ah,1
[  18]    01A0: CD 21                                 int 21h
[  19]        :                                       
[  20]    01A2: 3C 0D                                 cmp al,0Dh
[  21]    01A4: 74 06                                 je break
[  22]        :                                       
[  23]    01A6: 32 E4                                 xor ah,ah
[  24]    01A8: 50                                    push ax
[  25]    01A9: 41                                    inc cx
[  26]        :                                       
[  27]    01AA: EB F2                                 jmp input
[  28]    01AC:                                       break:
[  29]    01AC: B4 09                                 mov ah,9
[  30]    01AE: BA 2F 00                              lea dx,KQ
[  31]    01B1: CD 21                                 int 21h
[  32]        :                                       
[  33]    01B3: B4 02                                 mov ah,2
[  34]    01B5:                                       output:
[  35]    01B5: 5A                                    pop dx
[  36]    01B6: CD 21                                 int 21h
[  37]    01B8: E2 FB                                 loop output
[  38]        :                                       
[  39]        :                                       ;Ket thuc chuong trinh
[  40]    01BA: B4 09                                 mov ah,9
[  41]    01BC: BA 5E 00                              lea dx,KThuc
[  42]    01BF: CD 21                                 int 21h
[  43]        :                                       
[  44]    01C1: B4 07                                 mov ah,7
[  45]    01C3: CD 21                                 int 21h
[  46]        :                                       
[  47]    01C5: B4 4C                                 mov ah,4ch
[  48]    01C7: CD 21                                 int 21h
[  49]        :                                       
[  50]        :                                       end
[  51]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: C9      -   bytes on last page (l.byte)
0003: 01      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 01      -   SP - stack pointer (h.byte)
0012: 0F      -   check sum (l.byte)
0013: 0D      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 19      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 19      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
