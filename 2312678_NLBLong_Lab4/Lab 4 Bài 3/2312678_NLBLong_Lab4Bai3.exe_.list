EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
2312678_NLBLong_Lab4Bai3.exe_ -- emu8086 assembler version: 4.08  
 
[ 9/11/2024  --  3:20:27 PM ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       .model small
[   2]        :                                       .stack 100h
[   3]        :                                       .data
[   4]    0100: 0A 0D 48 61 79 20 6E 68 61 70 20 6D   TBao DB 10,13, 'Hay nhap mot chu thuong (a-z): $'
                6F 74 20 63 68 75 20 74 68 75 6F 6E 
                67 20 28 61 2D 7A 29 3A 20 24       
[   5]    0122: 0A 0D 43 68 75 20 68 6F 61 20 74 75   KQ DB 10,13,'Chu hoa tuong ung la: $'
                6F 6E 67 20 75 6E 67 20 6C 61 3A 20 
                24                                  
[   6]    013B: 0A 0D 42 61 6D 20 70 68 69 6D 20 62   KThuc DB 10,13, 'Bam phim bat ky de thoat chuong trinh $'
                61 74 20 6B 79 20 64 65 20 74 68 6F 
                61 74 20 63 68 75 6F 6E 67 20 74 72 
                69 6E 68 20 24                      
[   7]        :                                       
[   8]    0164: 00 24                                 Char db ? ,'$'
[   9]        :                                       .code
[  10]    0170: B8 10 00                              mov ax, @data
[  11]    0173: 8E D8                                 mov ds, ax
[  12]        :                                       
[  13]    0175: B4 09                                 mov ah, 9
[  14]    0177: BA 00 00                              lea dx, TBao
[  15]    017A: CD 21                                 int 21h
[  16]        :                                       
[  17]    017C: E8 03 00                              call xuly_chuhoa
[  18]        :                                       
[  19]    017F: E8 1C 00                              call thoatCT
[  20]        :                                       
[  21]    0182:                                       xuly_chuhoa proc
[  22]    0182:                                       input:
[  23]        :                                       
[  24]    0182: B4 01                                 mov ah, 1
[  25]    0184: CD 21                                 int 21h
[  26]        :                                       
[  27]    0186: 3C 0D                                 cmp al,0Dh
[  28]    0188: 74 13                                 je exit
[  29]        :                                       
[  30]    018A: 2C 20                                 sub al,20h
[  31]    018C: A2 64 00                              mov Char,al
[  32]        :                                       
[  33]    018F: BA 22 00                              lea dx,KQ
[  34]    0192: B4 09                                 mov ah,9
[  35]    0194: CD 21                                 int 21h
[  36]        :                                       
[  37]    0196: BA 64 00                              lea dx,Char
[  38]    0199: B4 09                                 mov ah,9
[  39]    019B: CD 21                                 int 21h
[  40]        :                                       ;jmp continue   Su dung continue neu muon lap lai
[  41]        :                                       ;continue:
[  42]        :                                       ;jmp input
[  43]    019D:                                       exit:
[  44]    019D: C3                                    RET
[  45]        :                                       xuly_chuhoa endp
[  46]    019E:                                       thoatCT proc
[  47]    019E: B4 09                                 mov ah,9
[  48]    01A0: BA 3B 00                              lea dx,KThuc
[  49]    01A3: CD 21                                 int 21h
[  50]        :                                       
[  51]    01A5: B4 07                                 mov ah,7
[  52]    01A7: CD 21                                 int 21h
[  53]        :                                       
[  54]    01A9: B4 4C                                 mov ah,4ch
[  55]    01AB: CD 21                                 int 21h
[  56]    01AD: C3                                    RET
[  57]        :                                       thoatCT endp
[  58]        :                                       end
[  59]        :                                       
[  60]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: AE      -   bytes on last page (l.byte)
0003: 01      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 01      -   SP - stack pointer (h.byte)
0012: 72      -   check sum (l.byte)
0013: 34      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 17      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 17      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
