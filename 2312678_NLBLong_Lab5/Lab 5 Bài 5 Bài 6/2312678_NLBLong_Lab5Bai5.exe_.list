EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
2312678_NLBLong_Lab5Bai5.exe_ -- emu8086 assembler version: 4.08  
 
[ 9/25/2024  --  1:32:01 PM ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       .model small
[   2]        :                                       .stack 100h
[   3]        :                                       .data
[   4]    0100: 0D 0A 4E 68 61 70 20 73 6F 20 74 68   TB1 db 13,10,'Nhap so thap phan: $'
                61 70 20 70 68 61 6E 3A 20 24       
[   5]    0116: 0D 0A 53 6F 20 74 68 61 70 20 70 68   TB2 db 13,10,'So thap phan vua nhap: $'
                61 6E 20 76 75 61 20 6E 68 61 70 3A 
                20 24                               
[   6]        :                                       .code
[   7]    0130: B8 10 00                              mov ax, @data
[   8]    0133: 8E D8                                 mov ds, ax
[   9]        :                                       
[  10]    0135: E8 07 00                              call INPUT
[  11]    0138: E8 49 00                              call OUTPUT
[  12]        :                                       
[  13]    013B: B4 4C                                 mov ah, 4ch
[  14]    013D: CD 21                                 int 21h
[  15]        :                                       
[  16]    013F:                                       INPUT proc
[  17]    013F:                                       @begin:
[  18]    013F: 33 C9                                 xor cx,cx
[  19]    0141: BA 00 00                              lea dx,TB1
[  20]    0144: B4 09                                 mov ah,9
[  21]    0146: CD 21                                 int 21h
[  22]        :                                       
[  23]    0148: B4 01                                 mov ah, 1
[  24]    014A: CD 21                                 int 21h
[  25]        :                                       
[  26]    014C: 3C 2D                                 cmp al, '-'
[  27]    014E: 74 06                                 je @minus
[  28]    0150: 3C 2B                                 cmp al, '+'
[  29]    0152: 74 05                                 je @plus
[  30]        :                                       
[  31]    0154: EB 05                                 jmp @tieptuc
[  32]        :                                       
[  33]    0156:                                       @minus:
[  34]    0156: B9 01 00                              mov cx, 1
[  35]    0159:                                       @plus:
[  36]    0159: CD 21                                 int 21h
[  37]    015B:                                       @tieptuc:
[  38]        :                                       ;So sanh neu nho hon so 0
[  39]    015B: 3C 30                                 cmp al, '0'
[  40]    015D: 7C 23                                 jnge @notdigit
[  41]        :                                       ;So sanh neu lon hon so 9
[  42]    015F: 3C 39                                 cmp al, '9'
[  43]    0161: 7F 1F                                 jnle @notdigit
[  44]        :                                       ;Doi ky so thanh tri
[  45]    0163: 25 0F 00                              and ax, 0fh
[  46]    0166: 50                                    push ax
[  47]        :                                       ;Tinh tong=10*tong+tri
[  48]    0167: B8 0A 00                              mov ax, 10
[  49]    016A: F7 E3                                 mul bx
[  50]    016C: 8B D8                                 mov bx, ax
[  51]    016E: 58                                    pop ax
[  52]    016F: 03 D8                                 add bx, ax
[  53]        :                                       
[  54]    0171: B4 01                                 mov ah, 1
[  55]    0173: CD 21                                 int 21h
[  56]        :                                       ;So sanh voi enter, neu khong phai thi tiep tuc lap
[  57]    0175: 3C 0D                                 cmp al, 13
[  58]    0177: 75 E2                                 jne @tieptuc
[  59]        :                                       
[  60]    0179: 8B C3                                 mov ax, bx
[  61]        :                                       ;Kiem tra cx co gia tri (1 neu am)
[  62]    017B: 0B C9                                 or cx, cx
[  63]    017D: 74 02                                 je @return
[  64]    017F: F7 D8                                 neg ax
[  65]        :                                       
[  66]    0181:                                       @return:
[  67]    0181: C3                                    ret
[  68]    0182:                                       @notdigit:
[  69]    0182: EB BB                                 jmp @begin
[  70]        :                                       INPUT endp
[  71]        :                                       
[  72]    0184:                                       OUTPUT proc
[  73]        :                                       ;ax luc nay dang giu gia tri (neu la am) nen gui vao stack
[  74]    0184: 50                                    push ax
[  75]    0185: BA 16 00                              lea dx,TB2
[  76]    0188: B4 09                                 mov ah,9
[  77]    018A: CD 21                                 int 21h
[  78]        :                                       ;lay lai gia tri cho ax
[  79]    018C: 58                                    pop ax
[  80]        :                                       ;so sanh tong voi so 0
[  81]    018D: 3D 00 00                              cmp ax, 0
[  82]    0190: 7D 0A                                 jge doira_thapphan
[  83]        :                                       ;neu nho hon 0
[  84]    0192: 50                                    push ax
[  85]    0193: B2 2D                                 mov dl, '-'
[  86]    0195: B4 02                                 mov ah, 2
[  87]    0197: CD 21                                 int 21h
[  88]    0199: 58                                    pop ax
[  89]    019A: F7 D8                                 neg ax
[  90]        :                                       ;lap chia cho 10
[  91]    019C:                                       doira_thapphan:
[  92]    019C: 33 C9                                 xor cx, cx
[  93]    019E: BB 0A 00                              mov bx, 10
[  94]    01A1:                                       chia:
[  95]    01A1: 33 D2                                 xor dx, dx
[  96]    01A3: F7 F3                                 div bx
[  97]        :                                       ;so du cho vao ngan xep
[  98]    01A5: 52                                    push dx
[  99]    01A6: 41                                    inc cx
[ 100]        :                                       ;lap cho den khi thuong bang 0
[ 101]    01A7: 3D 00 00                              cmp ax, 0
[ 102]    01AA: 75 F5                                 jne chia
[ 103]    01AC: B4 02                                 mov ah, 2
[ 104]    01AE:                                       doi:
[ 105]        :                                       ;doi so thap phan -> ky so
[ 106]    01AE: 5A                                    pop dx
[ 107]    01AF: 80 CA 30                              or dl, 30h
[ 108]    01B2: CD 21                                 int 21h
[ 109]    01B4: E2 F8                                 loop doi
[ 110]    01B6: C3                                    ret
[ 111]        :                                       OUTPUT endp
[ 112]        :                                       end
[ 113]        :                                       
[ 114]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: B7      -   bytes on last page (l.byte)
0003: 01      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 01      -   SP - stack pointer (h.byte)
0012: 7D      -   check sum (l.byte)
0013: 37      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 13      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 13      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
